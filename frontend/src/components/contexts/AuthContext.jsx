import React, { createContext, useState, useEffect } from 'react';
import axios from 'axios';

export const AuthContext = createContext();

export const AuthProvider = ({ children }) => {
  const [isAuthenticated, setIsAuthenticated] = useState(null); // null = –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    console.log('[Auth] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');
    axios.get('http://127.0.0.1:8000/auth/check', {
      withCredentials: true,
    })
      .then(() => {
        setIsAuthenticated(true);
        console.log('[Auth] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω ‚úÖ');
      })
      .catch(() => {
        setIsAuthenticated(false);
        console.log('[Auth] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω ‚ùå');
      });
  }, []);

  const login = () => {
    setIsAuthenticated(true);
    console.log('[Auth] –í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω ‚Äî –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω ‚úÖ');
  };

  const logout = async () => {
    console.log('[Auth] –í—ã—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    try {
      await axios.delete('http://127.0.0.1:8000/auth/logout', {
        withCredentials: true,
      });
      console.log('[Auth] –í—ã—Ö–æ–¥ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω üì¥');
    } catch (err) {
      console.error('[Auth] –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ ‚ùå', err);
    } finally {
      setIsAuthenticated(false);
      console.log('[Auth] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–ª–æ–≥–∏–Ω–µ–Ω ‚ùå');
    }
  };

  // –í—ã–≤–æ–¥ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ä–µ–Ω–¥–µ—Ä–µ (–ø–æ –∂–µ–ª–∞–Ω–∏—é)
  useEffect(() => {
    console.log(`[Auth] –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ isAuthenticated:`, isAuthenticated);
  }, [isAuthenticated]);

  return (
    <AuthContext.Provider value={{ isAuthenticated, login, logout }}>
      {children}
    </AuthContext.Provider>
  );
};
